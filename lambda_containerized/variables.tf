variable "name" {
  type        = string
  description = "The name of the lambda function you want to create."
}

variable "iam_role_name" {
  type        = string
  description = "Forces the iam role name to be a specific value"
  default     = null
}

variable "image_uri" {
  type        = string
  default     = "336015931235.dkr.ecr.us-east-1.amazonaws.com/python-app:002"
  description = "The fully qualified image ID for the docker image you want to use as your lambda implementation."
}

variable "subnet_ids" {
  type        = list(string)
  default     = []
  description = "The subnets where ENIs for this lambda will be created which allows the lambda to access other internal resources."
}

variable "managed_policies" {
  type        = list(string)
  default     = []
  description = "ARNs for managed IAM policies you want added to the IAM role the lambda will assume."
}

variable "inline_policies" {
  type        = map(string)
  default     = {}
  description = "A map of policy name => policy json you want added to the IAM role the lambda will assume."
}

variable "tags" {
  type        = map(string)
  default     = {}
  description = "Tags which should propagate to every taggable resource created by this module."
}

variable "memory" {
  type        = number
  default     = 512
  description = "How much memory should be allocated to individual lambda instances?"
}

variable "timeout" {
  type        = number
  default     = 300
  description = "Maximum amount of a time a lambda can actively process an event until it's stopped by AWS."
}

variable "minimum_available_concurrency" {
  type        = number
  default     = 100
  description = "How much concurrency (taken from the account-wide unreserved concurrency pool) should be designated specifically for this lambda."
}

variable "warm_provisioned_concurrency" {
  type        = number
  default     = 0
  description = "How many lambda instances should be constantly 'warm' and ready to process events?"
}

variable "extra_assume_role_policies" {
  type        = list(string)
  default     = []
  description = "Other assume role policies that should be added to the lambda's role"
}

variable "cloudwatch_log_retention_period" {
  type        = number
  default     = 7
  description = "How long (in days) should cloudwatch retain the logs generated by this lambda?"
}

variable "description" {
  type    = string
  default = "A lambda defined using terraform"
}

variable "alarm_notification_arns" {
  type        = list(string)
  default     = []
  description = "ARNs that you want to notify of changes in the cloudwatch alarms created for this lambda."
}

variable "errors_evaluation_period" {
  type        = number
  default     = 300
  description = "Over what period of time do you want a cloudwatch alarm to sum errors before alarming if it exceeds the threshold?"
}

variable "throttles_evaluation_period" {
  type        = number
  default     = 300
  description = "Over what period of time do you want a cloudwatch alarm to sum throttles before alarming if it exceeds the threshold?"
}

variable "excessive_errors_in_period" {
  type        = number
  default     = 5
  description = "How many errors (in the period) are too many such that someone should be alerted?"
}

variable "excessive_throttles_in_period" {
  type        = number
  default     = 5
  description = "How many throttles (in the period) are too many such that someone should be alerted?"
}

variable "environment_variables" {
  type        = map(string)
  default     = {}
  description = "A map of environment variables (name => value) you want to expose to this lambda."
}

variable "rolename" {
  type        = string
  default     = ""
  description = "The name that should be used for the IAM role."
}
